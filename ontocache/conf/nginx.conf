events { worker_connections 1024; }

http {
    access_log /access.log;

    proxy_cache_path  /var/nginx/cache  levels=1:2    keys_zone=STATIC:10m inactive=24h  max_size=1g;

    upstream backend_GET {
        least_conn;
        server stateful:8080;
        server stateless:8080;
    }

    upstream backend_POST {
        server stateful:8080;
    }

    upstream backend_PUT {
        server stateful:8080;
    }

    upstream backend_DELETE {
        server stateful:8080;
    }

    upstream backend_OPTIONS {
        server stateful:8080;
    }

    server {

        #include snippets/ssl-your.domain.here.conf;

        client_max_body_size 600M;

        #resource search
        location ~ /fhir/[A-Z][A-Za-z]*(/_search)?/?$ {
            proxy_pass             http://stateful:8080;

            include snippets/cors.conf;
        }

        #resource history - instance or type level
        location ~ /fhir/[A-Z][A-Za-z]*(/[^/]*)?/_history/?$ {
            proxy_pass             http://stateful:8080;

            include snippets/cors.conf;
        }

        #closure
        location /fhir/$closure {
            proxy_pass             http://stateful:8080;

            include snippets/cors.conf;
        }
        
        location / {
            proxy_http_version     1.1;
            proxy_pass             http://backend_$request_method;
            proxy_set_header       Host $host;
            proxy_read_timeout     300s;
            proxy_cache            STATIC;
            proxy_cache_valid      200  1d;
            proxy_cache_revalidate on;
            proxy_cache_use_stale  error timeout invalid_header updating http_500 http_502 http_503 http_504;

            include snippets/cors.conf;
        }

    }
}
